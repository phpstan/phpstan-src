os: linux
dist: xenial
language: php

stages:
  - test
  - name: phar
    if: (branch = master OR tag IS present) && type = push

php:
  - 7.1
  - 7.2
  - 7.3
  - 7.4
  - master

env:
  global:
    secure: "EpvZZ1v6JvefnfhgYm3Y2WprJxjgr6zDw2FJs+WISEtd1PHJToFJOE59vW7DRTcr5ycR4jrHyANqqIJWbH1k3A3wuyavmkissNKHbFK6vmLtAC9TuI/x5zBd+/T5yQ6i6uBe43nDzbkrQDYtGyNMdn1FXhWV9Z/hNCZ6uD0aiO5+d49NFJoexUOt3+LCxrZAGCCsm49KYRff/62QxO2Wajlfdhx+PLO0igY/i9N3oUQoVfbBEbP1ZSAPLv7ZkZGL4XdMMYEGYqnOeMWk39MYID34RmCYteWRfED4oqYbi4rzOpW8YeA/YkuHGThIykSLBrjdAfwUpekVEAI9r1gdrh91Gkpm/W/trFygdfI2gqev5GVjbYgmKQMm50l1W8wiD+Tb+AMUIttEXGjgwd+K2rn1RBHjM+CjPEWWdppg/7OOYVIJg0gIr94TN2LCQWDfFN5SxIIf0BpQmWteGEPCDpxCc3jsjpaVFXQ2jrui69Pdjr8/u7XCisQD9zpn4sQ43GZkdHC4rGOoBrjXQDWMB/LZyYNymJ6fkkuceqSgn6vDyBEkp9UBR1CIv4P8Ray86qEPodDFbPZMVX2JqDwUHMH3HVl4FINPYtVW3/VNUK7VihKd33+AjoX7anRTeq0T8jXUT4IF6tAxbO4DaDBB4XjQ3vCBDH15WxwIxy81KKA="

before_script:
  - if php --ri xdebug >/dev/null; then phpenv config-rm xdebug.ini; fi
  - composer update --no-interaction

script:
  - vendor/bin/phing

jobs:
  allow_failures:
    - php: master
    - os: windows
  include:
    - stage: test
      php: 7.3
      name: Compiler tests
      script:
        - |
          cd compiler && \
          composer install --no-interaction && \
          vendor/bin/phpunit -c tests/phpunit.xml tests && \
          ../bin/phpstan analyse -l 8 src tests && \
          php bin/compile && \
          ../tmp/phpstan.phar
    - stage: phar
      php: 7.3
      before_install:
        - |
          openssl aes-256-cbc -K $encrypted_bd816b4f73f9_key -iv $encrypted_bd816b4f73f9_iv -in build/key.gpg.enc -out build/key.gpg -d && \
          gpg --batch --import build/key.gpg && \
          rm build/key.gpg
      script:
        - |
          composer install --working-dir=compiler && \
          php compiler/bin/compile && \
          GIT_LOG=$(git log ${TRAVIS_COMMIT_RANGE} --reverse --pretty='%H %s' | sed -e 's/^/https:\/\/github.com\/phpstan\/phpstan-src\/commit\//') && \
          git clone https://${GITHUB_TOKEN}@github.com/phpstan/phpstan.git phpstan-dist > /dev/null 2>&1 && \
          cp tmp/phpstan.phar phpstan-dist/phpstan.phar && \
          cp tmp/phpstan.phar phpstan-dist/phpstan && \
          cd phpstan-dist && \
          git config user.email "ondrej@mirtes.cz" && \
          git config user.name "Ondrej Mirtes" && \
          git config --global user.signingkey CF1A108D0E7AE720 && \
          rm phpstan.phar.asc && \
          gpg --batch -ab phpstan.phar && \
          gpg --verify phpstan.phar.asc && \
          git add phpstan phpstan.phar phpstan.phar.asc

          if [ "${TRAVIS_TAG}" != "" ]; then
            COMMIT_MSG="PHPStan ${TRAVIS_TAG}"
          else
            COMMIT_MSG="Updated PHPStan to commit ${TRAVIS_COMMIT}"
          fi

          git commit -S -m "${COMMIT_MSG}" -m "${GIT_LOG}" && \
          git push --quiet origin master

          if [ "${TRAVIS_TAG}" != "" ]; then
            git tag -s ${TRAVIS_TAG} -m "${TRAVIS_TAG}" && \
            git push --quiet origin ${TRAVIS_TAG}
          fi
    - stage: test
      os: windows
      language: shell # No PHP currently
      env: PHP_VERSION=7.1.32
      install:
        - choco install php --version=${PHP_VERSION} --package-parameters="/InstallDir:c:\tools\php"
        - choco install composer --ia "/DEV=C:\tools\php"
        - cp 'C:\tools\php\php.ini-production' 'C:\tools\php\php.ini'
        - echo 'memory_limit=1G' >> 'C:\tools\php\php.ini'
        - echo 'date.timezone="UTC"' >> 'C:\tools\php\php.ini'
        - echo 'extension_dir=ext' >> 'C:\tools\php\php.ini'
        - echo 'extension=php_curl.dll' >> 'C:\tools\php\php.ini'
        - echo 'extension=php_mbstring.dll' >> 'C:\tools\php\php.ini'
        - echo 'extension=php_openssl.dll' >> 'C:\tools\php\php.ini'
        - export PATH=/c/tools/php:$PATH
      script:
        - vendor/bin/phing tests
        - vendor/bin/phing phpstan
    - stage: test
      os: windows
      language: shell # No PHP currently
      env: PHP_VERSION=7.2.23
      install:
        - choco install php --version=${PHP_VERSION} --package-parameters="/InstallDir:c:\tools\php"
        - choco install composer --ia "/DEV=C:\tools\php"
        - cp 'C:\tools\php\php.ini-production' 'C:\tools\php\php.ini'
        - echo 'memory_limit=1G' >> 'C:\tools\php\php.ini'
        - echo 'date.timezone="UTC"' >> 'C:\tools\php\php.ini'
        - echo 'extension_dir=ext' >> 'C:\tools\php\php.ini'
        - echo 'extension=php_curl.dll' >> 'C:\tools\php\php.ini'
        - echo 'extension=php_mbstring.dll' >> 'C:\tools\php\php.ini'
        - echo 'extension=php_openssl.dll' >> 'C:\tools\php\php.ini'
        - export PATH=/c/tools/php:$PATH
      script:
        - vendor/bin/phing tests
        - vendor/bin/phing phpstan
    - stage: test
      os: windows
      language: shell # No PHP currently
      env: PHP_VERSION=7.3.10
      install:
        - choco install php --version=${PHP_VERSION} --package-parameters="/InstallDir:c:\tools\php"
        - choco install composer --ia "/DEV=C:\tools\php"
        - cp 'C:\tools\php\php.ini-production' 'C:\tools\php\php.ini'
        - echo 'memory_limit=1G' >> 'C:\tools\php\php.ini'
        - echo 'date.timezone="UTC"' >> 'C:\tools\php\php.ini'
        - echo 'extension_dir=ext' >> 'C:\tools\php\php.ini'
        - echo 'extension=php_curl.dll' >> 'C:\tools\php\php.ini'
        - echo 'extension=php_mbstring.dll' >> 'C:\tools\php\php.ini'
        - echo 'extension=php_openssl.dll' >> 'C:\tools\php\php.ini'
        - export PATH=/c/tools/php:$PATH
      script:
        - vendor/bin/phing tests
        - vendor/bin/phing phpstan

cache:
  directories:
    - $HOME/.composer/cache
    - tmp

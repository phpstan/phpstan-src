<?xml version="1.0" encoding="utf-8"?>
<project name="PHPStan" default="check">
	<property name="path.composer-require-checker"
			  value="tmp/composer-require-checker-2.1.0.phar"/>
	<property name="url.composer-require-checker"
			  value="https://github.com/maglnet/ComposerRequireChecker/releases/download/2.1.0/composer-require-checker.phar"/>
	<property name="phpstan.config" value="phpstan.neon"/>

	<target name="composer-validate">
		<exec
				executable="composer"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="validate"/>
			<arg value="--ansi"/>
		</exec>
	</target>

	<target name="composer-install">
		<exec
				executable="composer"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="install"/>
			<arg value="--ansi"/>
		</exec>
	</target>

	<target name="composer-require-checker">
		<if>
			<and>
				<not>
					<available file="${path.composer-require-checker}"/>
				</not>
				<not><os family="windows"/></not>
			</and>
			<then>
				<exec
					executable="wget"
					logoutput="true"
					passthru="true"
					checkreturn="true"
				>
					<arg value="-O"/>
					<arg path="${path.composer-require-checker}"/>
					<arg value="${url.composer-require-checker}"/>
				</exec>
			</then>
		</if>
		<if>
			<available file="${path.composer-require-checker}"/>
			<then>
				<exec
						executable="php"
						logoutput="true"
						passthru="true"
						checkreturn="true"
				>
					<arg path="${path.composer-require-checker}"/>
					<arg value="check"/>
					<arg value="--config-file"/>
					<arg path="${project.basedir}/build/composer-require-checker.json"/>
					<arg path="composer.json"/>
				</exec>
			</then>
		</if>
	</target>

	<target name="lint">
		<exec
				executable="vendor/bin/parallel-lint"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="--colors"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Analyser/data"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Methods/data"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Functions/data"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Operators/data/invalid-inc-dec.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Arrays/data/offset-access-without-dim-for-reading.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Classes/data/duplicate-declarations.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Classes/data/extends-error.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Classes/data/implements-error.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Classes/data/interface-extends-error.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Classes/data/trait-use-error.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Properties/data/default-value-for-native-property-type.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Arrays/data/empty-array-item.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Classes/data/invalid-promoted-properties.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Classes/data/duplicate-promoted-property.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Properties/data/default-value-for-promoted-property.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Operators/data/invalid-assign-var.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Functions/data/arrow-function-nullsafe-by-ref.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Levels/data/namedArguments.php"/>
			<arg value="--exclude"/>
			<arg path="tests/PHPStan/Rules/Keywords/data/continue-break.php"/>
			<arg path="src" />
			<arg path="tests" />
			<arg path="compiler/src" />
		</exec>
	</target>

	<target name="cs">
		<exec
			executable="composer"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="install"/>
			<arg value="--working-dir"/>
			<arg path="build-cs"/>
			<arg value="--ansi"/>
		</exec>
		<exec
			executable="build-cs/vendor/bin/phpcs"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
		</exec>
	</target>

	<target name="cs-fix">
		<exec
				executable="build-cs/vendor/bin/phpcbf"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
		</exec>
	</target>

	<target name="phpstan">
		<delete file="${phpstan.config}"/>
		<exec
			executable="php"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg path="bin/phpstan"/>
			<arg value="clear-result-cache"/>
			<arg value="-q"/>
		</exec>
		<exec
				executable="php"
				logoutput="true"
				passthru="true"
				checkreturn="true"
		>
			<arg value="-d"/>
			<arg value="memory_limit=768M"/>
			<arg path="bin/phpstan"/>
		</exec>
	</target>

	<target name="phpstan-static-reflection">
		<touch file="${phpstan.config}"/>
		<append
			destFile="${phpstan.config}"
			text="includes: [ build/phpstan.neon"
			append="false"
		></append>
		<append
			destFile="${phpstan.config}"
			text=", conf/staticReflection.neon"
		></append>
		<append
			destFile="${phpstan.config}"
			text=" ]"
		></append>
		<exec
			executable="php"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg path="bin/phpstan"/>
			<arg value="clear-result-cache"/>
			<arg value="-c"/>
			<arg path="${phpstan.config}"/>
			<arg value="-q"/>
		</exec>
		<exec
			executable="php"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="-d"/>
			<arg value="memory_limit=768M"/>
			<arg path="bin/phpstan"/>
		</exec>
	</target>

	<target name="phpstan-result-cache">
		<delete file="${phpstan.config}"/>
		<exec
			executable="php"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="-d"/>
			<arg value="memory_limit=768M"/>
			<arg path="bin/phpstan"/>
		</exec>
	</target>

	<target name="phpstan-validate-stub-files">
		<touch file="empty.php"/>
		<exec
			executable="php"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="-d"/>
			<arg value="memory_limit=768M"/>
			<arg path="bin/phpstan"/>
			<arg value="analyse"/>
			<arg value="-c"/>
			<arg path="conf/config.stubFiles.neon"/>
			<arg value="-l"/>
			<arg value="8"/>
			<arg path="empty.php"/>
		</exec>
		<delete file="empty.php"/>
	</target>

	<target name="phpstan-pro">
		<delete file="${phpstan.config}"/>
		<exec
			executable="php"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="-d"/>
			<arg value="memory_limit=1024M"/>
			<arg path="bin/phpstan"/>
			<arg value="--pro"/>
		</exec>
	</target>

	<target name="phpstan-generate-baseline">
		<delete file="${phpstan.config}"/>
		<exec
			executable="php"
			logoutput="true"
			passthru="true"
			checkreturn="true"
		>
			<arg value="-d"/>
			<arg value="memory_limit=768M"/>
			<arg path="bin/phpstan"/>
			<arg value="--generate-baseline"/>
			<arg value="-vvv"/>
		</exec>
	</target>

</project>

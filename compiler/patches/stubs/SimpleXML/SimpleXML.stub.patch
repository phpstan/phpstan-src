--- SimpleXML/SimpleXML.stub	2020-07-17 13:50:32.000000000 +0200
+++ SimpleXML/SimpleXML2.stub	2020-07-17 13:51:37.000000000 +0200
@@ -6,7 +6,7 @@
  * Represents an element in an XML document.
  * @link https://php.net/manual/en/class.simplexmlelement.php
  */
-class SimpleXMLElement implements Traversable, ArrayAccess, Countable, Iterator {
+class SimpleXMLElement implements Traversable, ArrayAccess, Countable {

 	/**
 	 * Creates a new SimpleXMLElement object
@@ -244,41 +244,6 @@
      * @return void
      */
     private function offsetUnset ($offset) {}
-
-    /**
-     * Rewind to the first element
-     * @link https://php.net/manual/en/simplexmliterator.rewind.php
-     * @return void No value is returned.
-     */
-    private function rewind () {}
-
-    /**
-     * Check whether the current element is valid
-     * @link https://php.net/manual/en/simplexmliterator.valid.php
-     * @return bool <b>TRUE</b> if the current element is valid, otherwise <b>FALSE</b>
-     */
-    private function valid () {}
-
-    /**
-     * Returns the current element
-     * @link https://php.net/manual/en/simplexmliterator.current.php
-     * @return static|null the current element as a <b>SimpleXMLElement</b> object or <b>NULL</b> on failure.
-     */
-    private function current () {}
-
-    /**
-     * Return current key
-     * @link https://php.net/manual/en/simplexmliterator.key.php
-     * @return string|false the XML tag name of the element referenced by the current <b>SimpleXMLIterator</b> object or <b>FALSE</b>
-     */
-    private function key () {}
-
-    /**
-     * Move to next element
-     * @link https://php.net/manual/en/simplexmliterator.next.php
-     * @return void No value is returned.
-     */
-    private function next () {}
 }

 /**

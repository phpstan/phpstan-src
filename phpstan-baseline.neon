parameters:
	ignoreErrors:
		-
			message: "#^Only numeric types are allowed in pre\\-decrement, bool\\|float\\|int\\|string\\|null given\\.$#"
			count: 1
			path: src/Analyser/MutatingScope.php

		-
			message: "#^Only numeric types are allowed in pre\\-increment, bool\\|float\\|int\\|string\\|null given\\.$#"
			count: 1
			path: src/Analyser/MutatingScope.php

		-
			message: "#^Parameter \\#2 \\$node of method PHPStan\\\\BetterReflection\\\\SourceLocator\\\\Ast\\\\Strategy\\\\NodeToReflection\\:\\:__invoke\\(\\) expects PhpParser\\\\Node\\\\Expr\\\\ArrowFunction\\|PhpParser\\\\Node\\\\Expr\\\\Closure\\|PhpParser\\\\Node\\\\Expr\\\\FuncCall\\|PhpParser\\\\Node\\\\Stmt\\\\Class_\\|PhpParser\\\\Node\\\\Stmt\\\\Const_\\|PhpParser\\\\Node\\\\Stmt\\\\Enum_\\|PhpParser\\\\Node\\\\Stmt\\\\Function_\\|PhpParser\\\\Node\\\\Stmt\\\\Interface_\\|PhpParser\\\\Node\\\\Stmt\\\\Trait_, PhpParser\\\\Node\\\\Stmt\\\\ClassLike given\\.$#"
			count: 1
			path: src/Analyser/NodeScopeResolver.php

		-
			message: "#^Parameter \\#9 \\$reflection of class PHPStan\\\\Reflection\\\\ClassReflection constructor expects PHPStan\\\\BetterReflection\\\\Reflection\\\\Adapter\\\\ReflectionClass\\|PHPStan\\\\BetterReflection\\\\Reflection\\\\Adapter\\\\ReflectionEnum, object given\\.$#"
			count: 1
			path: src/Analyser/NodeScopeResolver.php

		-
			message: "#^Anonymous function has an unused use \\$container\\.$#"
			count: 1
			path: src/Command/CommandHelper.php

		-
			message: "#^Parameter \\#1 \\$path of function dirname expects string, string\\|false given\\.$#"
			count: 1
			path: src/Command/CommandHelper.php

		-
			message: "#^Static property PHPStan\\\\Command\\\\CommandHelper\\:\\:\\$reservedMemory is never read, only written\\.$#"
			count: 1
			path: src/Command/CommandHelper.php

		-
			message: "#^Parameter \\#1 \\$headers \\(array\\<string\\>\\) of method PHPStan\\\\Command\\\\ErrorsConsoleStyle\\:\\:table\\(\\) should be contravariant with parameter \\$headers \\(array\\) of method Symfony\\\\Component\\\\Console\\\\Style\\\\StyleInterface\\:\\:table\\(\\)$#"
			count: 1
			path: src/Command/ErrorsConsoleStyle.php

		-
			message: "#^Parameter \\#1 \\$headers \\(array\\<string\\>\\) of method PHPStan\\\\Command\\\\ErrorsConsoleStyle\\:\\:table\\(\\) should be contravariant with parameter \\$headers \\(array\\) of method Symfony\\\\Component\\\\Console\\\\Style\\\\SymfonyStyle\\:\\:table\\(\\)$#"
			count: 1
			path: src/Command/ErrorsConsoleStyle.php

		-
			message: "#^Parameter \\#2 \\$rows \\(array\\<array\\<string\\>\\>\\) of method PHPStan\\\\Command\\\\ErrorsConsoleStyle\\:\\:table\\(\\) should be contravariant with parameter \\$rows \\(array\\) of method Symfony\\\\Component\\\\Console\\\\Style\\\\StyleInterface\\:\\:table\\(\\)$#"
			count: 1
			path: src/Command/ErrorsConsoleStyle.php

		-
			message: "#^Parameter \\#2 \\$rows \\(array\\<array\\<string\\>\\>\\) of method PHPStan\\\\Command\\\\ErrorsConsoleStyle\\:\\:table\\(\\) should be contravariant with parameter \\$rows \\(array\\) of method Symfony\\\\Component\\\\Console\\\\Style\\\\SymfonyStyle\\:\\:table\\(\\)$#"
			count: 1
			path: src/Command/ErrorsConsoleStyle.php

		-
			message: "#^Call to an undefined method React\\\\Promise\\\\PromiseInterface\\:\\:done\\(\\)\\.$#"
			count: 2
			path: src/Command/FixerApplication.php

		-
			message: "#^Call to an undefined method React\\\\Promise\\\\PromiseInterface\\<Psr\\\\Http\\\\Message\\\\ResponseInterface, Exception\\>\\:\\:done\\(\\)\\.$#"
			count: 1
			path: src/Command/FixerApplication.php

		-
			message: "#^Parameter \\#1 \\$arg of function escapeshellarg expects string, string\\|false given\\.$#"
			count: 1
			path: src/Command/FixerApplication.php

		-
			message: "#^Call to an undefined method React\\\\Promise\\\\PromiseInterface\\:\\:done\\(\\)\\.$#"
			count: 1
			path: src/Command/WorkerCommand.php

		-
			message: "#^Fetching class constant PREVENT_MERGING of deprecated class Nette\\\\DI\\\\Config\\\\Helpers\\.$#"
			count: 1
			path: src/DependencyInjection/NeonAdapter.php

		-
			message: "#^Variable method call on Nette\\\\Schema\\\\Elements\\\\AnyOf\\|Nette\\\\Schema\\\\Elements\\\\Structure\\|Nette\\\\Schema\\\\Elements\\\\Type\\.$#"
			count: 1
			path: src/DependencyInjection/ParametersSchemaExtension.php

		-
			message: "#^Variable static method call on Nette\\\\Schema\\\\Expect\\.$#"
			count: 1
			path: src/DependencyInjection/ParametersSchemaExtension.php

		-
			message: "#^Variable method call on PHPStan\\\\Reflection\\\\ClassReflection\\.$#"
			count: 2
			path: src/PhpDoc/PhpDocBlock.php

		-
			message: "#^Variable static method call on PHPStan\\\\PhpDoc\\\\PhpDocBlock\\.$#"
			count: 1
			path: src/PhpDoc/PhpDocBlock.php

		-
			message: "#^Method PHPStan\\\\PhpDoc\\\\ResolvedPhpDocBlock\\:\\:getNameScope\\(\\) should return PHPStan\\\\Analyser\\\\NameScope but returns PHPStan\\\\Analyser\\\\NameScope\\|null\\.$#"
			count: 1
			path: src/PhpDoc/ResolvedPhpDocBlock.php

		-
			message: """
				#^Call to deprecated method getInstance\\(\\) of class PHPStan\\\\Broker\\\\Broker\\:
				Use PHPStan\\\\Reflection\\\\ReflectionProviderStaticAccessor instead$#
			"""
			count: 1
			path: src/PhpDoc/StubValidator.php

		-
			message: "#^Return type \\(PHPStan\\\\PhpDoc\\\\Tag\\\\ParamTag\\) of method PHPStan\\\\PhpDoc\\\\Tag\\\\ParamTag\\:\\:withType\\(\\) should be covariant with return type \\(static\\(PHPStan\\\\PhpDoc\\\\Tag\\\\TypedTag\\)\\) of method PHPStan\\\\PhpDoc\\\\Tag\\\\TypedTag\\:\\:withType\\(\\)$#"
			count: 1
			path: src/PhpDoc/Tag/ParamTag.php

		-
			message: "#^Return type \\(PHPStan\\\\PhpDoc\\\\Tag\\\\ReturnTag\\) of method PHPStan\\\\PhpDoc\\\\Tag\\\\ReturnTag\\:\\:withType\\(\\) should be covariant with return type \\(static\\(PHPStan\\\\PhpDoc\\\\Tag\\\\TypedTag\\)\\) of method PHPStan\\\\PhpDoc\\\\Tag\\\\TypedTag\\:\\:withType\\(\\)$#"
			count: 1
			path: src/PhpDoc/Tag/ReturnTag.php

		-
			message: "#^Return type \\(PHPStan\\\\PhpDoc\\\\Tag\\\\VarTag\\) of method PHPStan\\\\PhpDoc\\\\Tag\\\\VarTag\\:\\:withType\\(\\) should be covariant with return type \\(static\\(PHPStan\\\\PhpDoc\\\\Tag\\\\TypedTag\\)\\) of method PHPStan\\\\PhpDoc\\\\Tag\\\\TypedTag\\:\\:withType\\(\\)$#"
			count: 1
			path: src/PhpDoc/Tag/VarTag.php

		-
			message: "#^Dead catch \\- PHPStan\\\\BetterReflection\\\\Identifier\\\\Exception\\\\InvalidIdentifierName is never thrown in the try block\\.$#"
			count: 2
			path: src/Reflection/BetterReflection/BetterReflectionProvider.php

		-
			message: "#^Dead catch \\- PHPStan\\\\BetterReflection\\\\NodeCompiler\\\\Exception\\\\UnableToCompileNode\\|PHPStan\\\\BetterReflection\\\\Reflection\\\\Exception\\\\NotAClassReflection\\|PHPStan\\\\BetterReflection\\\\Reflection\\\\Exception\\\\NotAnInterfaceReflection is never thrown in the try block\\.$#"
			count: 1
			path: src/Reflection/BetterReflection/BetterReflectionProvider.php

		-
			message: "#^Parameter \\#9 \\$reflection of class PHPStan\\\\Reflection\\\\ClassReflection constructor expects PHPStan\\\\BetterReflection\\\\Reflection\\\\Adapter\\\\ReflectionClass\\|PHPStan\\\\BetterReflection\\\\Reflection\\\\Adapter\\\\ReflectionEnum, object given\\.$#"
			count: 1
			path: src/Reflection/BetterReflection/BetterReflectionProvider.php

		-
			message: "#^Parameter \\#2 \\$node of method PHPStan\\\\BetterReflection\\\\SourceLocator\\\\Ast\\\\Strategy\\\\NodeToReflection\\:\\:__invoke\\(\\) expects PhpParser\\\\Node\\\\Expr\\\\ArrowFunction\\|PhpParser\\\\Node\\\\Expr\\\\Closure\\|PhpParser\\\\Node\\\\Expr\\\\FuncCall\\|PhpParser\\\\Node\\\\Stmt\\\\Class_\\|PhpParser\\\\Node\\\\Stmt\\\\Const_\\|PhpParser\\\\Node\\\\Stmt\\\\Enum_\\|PhpParser\\\\Node\\\\Stmt\\\\Function_\\|PhpParser\\\\Node\\\\Stmt\\\\Interface_\\|PhpParser\\\\Node\\\\Stmt\\\\Trait_, PhpParser\\\\Node\\\\Stmt\\\\ClassLike given\\.$#"
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/AutoloadSourceLocator.php

		-
			message: "#^Construct empty\\(\\) is not allowed\\. Use more strict comparison\\.$#"
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/OptimizedDirectorySourceLocator.php

		-
			message: "#^Parameter \\#2 \\$node of method PHPStan\\\\BetterReflection\\\\SourceLocator\\\\Ast\\\\Strategy\\\\NodeToReflection\\:\\:__invoke\\(\\) expects PhpParser\\\\Node\\\\Expr\\\\ArrowFunction\\|PhpParser\\\\Node\\\\Expr\\\\Closure\\|PhpParser\\\\Node\\\\Expr\\\\FuncCall\\|PhpParser\\\\Node\\\\Stmt\\\\Class_\\|PhpParser\\\\Node\\\\Stmt\\\\Const_\\|PhpParser\\\\Node\\\\Stmt\\\\Enum_\\|PhpParser\\\\Node\\\\Stmt\\\\Function_\\|PhpParser\\\\Node\\\\Stmt\\\\Interface_\\|PhpParser\\\\Node\\\\Stmt\\\\Trait_, PhpParser\\\\Node\\\\Stmt\\\\ClassLike\\|PhpParser\\\\Node\\\\Stmt\\\\Function_ given\\.$#"
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/OptimizedDirectorySourceLocator.php

		-
			message: "#^Parameter \\#2 \\$node of method PHPStan\\\\BetterReflection\\\\SourceLocator\\\\Ast\\\\Strategy\\\\NodeToReflection\\:\\:__invoke\\(\\) expects PhpParser\\\\Node\\\\Expr\\\\ArrowFunction\\|PhpParser\\\\Node\\\\Expr\\\\Closure\\|PhpParser\\\\Node\\\\Expr\\\\FuncCall\\|PhpParser\\\\Node\\\\Stmt\\\\Class_\\|PhpParser\\\\Node\\\\Stmt\\\\Const_\\|PhpParser\\\\Node\\\\Stmt\\\\Enum_\\|PhpParser\\\\Node\\\\Stmt\\\\Function_\\|PhpParser\\\\Node\\\\Stmt\\\\Interface_\\|PhpParser\\\\Node\\\\Stmt\\\\Trait_, PhpParser\\\\Node\\\\Stmt\\\\ClassLike given\\.$#"
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/OptimizedSingleFileSourceLocator.php

		-
			message: "#^Only booleans are allowed in &&, int\\|false given on the right side\\.$#"
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/PhpFileCleaner.php

		-
			message: "#^Only booleans are allowed in an if condition, int\\|false given\\.$#"
			count: 1
			path: src/Reflection/BetterReflection/SourceLocator/PhpFileCleaner.php

		-
			message: "#^Method PHPStan\\\\Reflection\\\\ClassReflection\\:\\:getCacheKey\\(\\) should return string but returns string\\|null\\.$#"
			count: 1
			path: src/Reflection/ClassReflection.php

		-
			message: "#^Creating new PHPStan\\\\Php8StubsMap is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: src/Reflection/SignatureMap/Php8SignatureMapProvider.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: src/Rules/Api/ApiClassExtendsRule.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: src/Rules/Api/ApiClassImplementsRule.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: src/Rules/Api/ApiInstantiationRule.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: src/Rules/Api/ApiInterfaceExtendsRule.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: src/Rules/Api/ApiMethodCallRule.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: src/Rules/Api/ApiStaticCallRule.php

		-
			message: "#^Short ternary operator is not allowed\\. Use null coalesce operator if applicable or consider using long ternary\\.$#"
			count: 1
			path: src/Rules/Api/ApiTraitUseRule.php

		-
			message: "#^Binary operation \"\\+\" between array\\{class\\-string\\<TNodeType of PhpParser\\\\Node\\>\\} and array\\<string, class\\-string\\>\\|false results in an error\\.$#"
			count: 1
			path: src/Rules/Registry.php

		-
			message: "#^Method PHPStan\\\\Rules\\\\Registry\\:\\:__construct\\(\\) has parameter \\$rules with generic interface PHPStan\\\\Rules\\\\Rule but does not specify its types\\: TNodeType$#"
			count: 1
			path: src/Rules/Registry.php

		-
			message: "#^Property PHPStan\\\\Rules\\\\Registry\\:\\:\\$cache with generic interface PHPStan\\\\Rules\\\\Rule does not specify its types\\: TNodeType$#"
			count: 1
			path: src/Rules/Registry.php

		-
			message: "#^Property PHPStan\\\\Rules\\\\Registry\\:\\:\\$rules with generic interface PHPStan\\\\Rules\\\\Rule does not specify its types\\: TNodeType$#"
			count: 1
			path: src/Rules/Registry.php

		-
			message: "#^Anonymous function has an unused use \\$container\\.$#"
			count: 1
			path: src/Testing/PHPStanTestCase.php

		-
			message: """
				#^Call to deprecated method getInstance\\(\\) of class PHPStan\\\\Broker\\\\Broker\\:
				Use PHPStan\\\\Reflection\\\\ReflectionProviderStaticAccessor instead$#
			"""
			count: 1
			path: src/Type/ObjectType.php

		-
			message: """
				#^Call to deprecated method getUniversalObjectCratesClasses\\(\\) of class PHPStan\\\\Broker\\\\Broker\\:
				Inject %%universalObjectCratesClasses%% parameter instead\\.$#
			"""
			count: 1
			path: src/Type/ObjectType.php

		-
			message: "#^Unreachable statement \\- code above always terminates\\.$#"
			count: 1
			path: tests/PHPStan/Analyser/AnalyserTest.php

		-
			message: "#^Class PHPStan\\\\Analyser\\\\AnonymousClassNameRule implements generic interface PHPStan\\\\Rules\\\\Rule but does not specify its types\\: TNodeType$#"
			count: 1
			path: tests/PHPStan/Analyser/AnonymousClassNameRule.php

		-
			message: "#^Class PHPStan\\\\Analyser\\\\AnonymousClassNameRuleTest extends generic class PHPStan\\\\Testing\\\\RuleTestCase but does not specify its types\\: TRule$#"
			count: 1
			path: tests/PHPStan/Analyser/AnonymousClassNameRuleTest.php

		-
			message: "#^Method PHPStan\\\\Analyser\\\\AnonymousClassNameRuleTest\\:\\:getRule\\(\\) return type with generic interface PHPStan\\\\Rules\\\\Rule does not specify its types\\: TNodeType$#"
			count: 1
			path: tests/PHPStan/Analyser/AnonymousClassNameRuleTest.php

		-
			message: "#^Class PHPStan\\\\Analyser\\\\EvaluationOrderRule implements generic interface PHPStan\\\\Rules\\\\Rule but does not specify its types\\: TNodeType$#"
			count: 1
			path: tests/PHPStan/Analyser/EvaluationOrderRule.php

		-
			message: "#^Class PHPStan\\\\Analyser\\\\EvaluationOrderTest extends generic class PHPStan\\\\Testing\\\\RuleTestCase but does not specify its types\\: TRule$#"
			count: 1
			path: tests/PHPStan/Analyser/EvaluationOrderTest.php

		-
			message: "#^Method PHPStan\\\\Analyser\\\\EvaluationOrderTest\\:\\:getRule\\(\\) return type with generic interface PHPStan\\\\Rules\\\\Rule does not specify its types\\: TNodeType$#"
			count: 1
			path: tests/PHPStan/Analyser/EvaluationOrderTest.php

		-
			message: "#^Constant SOME_CONSTANT_IN_AUTOLOAD_FILE not found\\.$#"
			count: 1
			path: tests/PHPStan/Command/AnalyseCommandTest.php

		-
			message: "#^Class PHPStan\\\\Node\\\\FileNodeTest extends generic class PHPStan\\\\Testing\\\\RuleTestCase but does not specify its types\\: TRule$#"
			count: 1
			path: tests/PHPStan/Node/FileNodeTest.php

		-
			message: "#^Method PHPStan\\\\Node\\\\FileNodeTest\\:\\:getRule\\(\\) return type with generic interface PHPStan\\\\Rules\\\\Rule does not specify its types\\: TNodeType$#"
			count: 1
			path: tests/PHPStan/Node/FileNodeTest.php

		-
			message: "#^Creating new PHPStan\\\\Php8StubsMap is not covered by backward compatibility promise\\. The class might change in a minor PHPStan version\\.$#"
			count: 1
			path: tests/PHPStan/Reflection/SignatureMap/Php8SignatureMapProviderTest.php

		-
			message: """
				#^Instantiation of deprecated class PHPStan\\\\Rules\\\\Arrays\\\\AppendedArrayItemTypeRule\\:
				Replaced by PHPStan\\\\Rules\\\\Properties\\\\TypesAssignedToPropertiesRule$#
			"""
			count: 1
			path: tests/PHPStan/Rules/Arrays/AppendedArrayItemTypeRuleTest.php

		-
			message: """
				#^Return type of method PHPStan\\\\Rules\\\\Arrays\\\\AppendedArrayItemTypeRuleTest\\:\\:getRule\\(\\) has typehint with deprecated class PHPStan\\\\Rules\\\\Arrays\\\\AppendedArrayItemTypeRule\\:
				Replaced by PHPStan\\\\Rules\\\\Properties\\\\TypesAssignedToPropertiesRule$#
			"""
			count: 1
			path: tests/PHPStan/Rules/Arrays/AppendedArrayItemTypeRuleTest.php

		-
			message: """
				#^Instantiation of deprecated class PHPStan\\\\Rules\\\\Arrays\\\\AppendedArrayKeyTypeRule\\:
				Replaced by PHPStan\\\\Rules\\\\Properties\\\\TypesAssignedToPropertiesRule$#
			"""
			count: 1
			path: tests/PHPStan/Rules/Arrays/AppendedArrayKeyTypeRuleTest.php

		-
			message: """
				#^Return type of method PHPStan\\\\Rules\\\\Arrays\\\\AppendedArrayKeyTypeRuleTest\\:\\:getRule\\(\\) has typehint with deprecated class PHPStan\\\\Rules\\\\Arrays\\\\AppendedArrayKeyTypeRule\\:
				Replaced by PHPStan\\\\Rules\\\\Properties\\\\TypesAssignedToPropertiesRule$#
			"""
			count: 1
			path: tests/PHPStan/Rules/Arrays/AppendedArrayKeyTypeRuleTest.php

